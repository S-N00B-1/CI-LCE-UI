package net.kyrptonaught.lceui.config;

import com.terraformersmc.modmenu.api.ConfigScreenFactory;
import com.terraformersmc.modmenu.api.ModMenuApi;
import dev.isxander.yacl3.api.*;
import dev.isxander.yacl3.api.controller.TickBoxControllerBuilder;
import net.kyrptonaught.lceui.LCEUIMod;
import net.minecraft.text.Text;
import net.minecraft.util.Identifier;

public class ModMenuIntegration implements ModMenuApi {
    @Override
    public ConfigScreenFactory<?> getModConfigScreenFactory() {
        return (screen) -> {
            LCEConfigOptions configOptions = LCEUIMod.getConfig();
            return YetAnotherConfigLib.createBuilder()
                    .title(Text.translatable("options.lceui"))
                    .category(ConfigCategory.createBuilder()
                            .name(Text.translatable("options.lceui.general"))
                            .option(Option.<Boolean>createBuilder()
                                    .name(Text.translatable("options.lceui.general.textShadows"))
                                    .description(
                                            value -> OptionDescription.createBuilder()
                                                    .text(Text.translatable("options.lceui.general.textShadows.tooltip"))
                                                    .image(new Identifier(LCEUIMod.MOD_ID, "config/textshadows.png"),864, 496)
                                                    .build()
                                    )
                                    .binding(true, () -> configOptions.closerTextShadows, newVal -> configOptions.closerTextShadows = newVal)
                                    .controller(TickBoxControllerBuilder::create)
                                    .build())
                            .option(Option.<Boolean>createBuilder()
                                    .name(Text.translatable("options.lceui.general.whatsThis"))
                                    .description(
                                            value -> OptionDescription.createBuilder()
                                                    .text(Text.translatable("options.lceui.general.whatsThis.tooltip"))
                                                    .image(new Identifier(LCEUIMod.MOD_ID, "config/whatsthis.png"),864, 496)
                                                    .build()
                                    )
                                    .binding(true, () -> configOptions.whatsThis, newVal -> configOptions.whatsThis = newVal)
                                    .controller(TickBoxControllerBuilder::create)
                                    .build())
                            .option(Option.<Boolean>createBuilder()
                                    .name(Text.translatable("options.lceui.general.tooltips"))
                                    .description(
                                            value -> OptionDescription.createBuilder()
                                                    .text(Text.translatable("options.lceui.general.tooltips.tooltip"))
                                                    .image(new Identifier(LCEUIMod.MOD_ID, "config/tooltips.png"),864, 496)
                                                    .build()
                                    )
                                    .binding(true, () -> configOptions.tooltips, newVal -> configOptions.tooltips = newVal)
                                    .controller(TickBoxControllerBuilder::create)
                                    .build())
                            .build())
                    .category(ConfigCategory.createBuilder()
                            .name(Text.translatable("options.lceui.screens"))
                            .group(OptionGroup.createBuilder()
                                    .name(Text.translatable("options.lceui.screens.chat"))
                                    .description(OptionDescription.of(Text.translatable("options.lceui.screens.chat.tooltip")))
                                    .option(Option.<Boolean>createBuilder()
                                            .name(Text.translatable("options.lceui.screens.chatWidth"))
                                            .description(
                                                    value -> OptionDescription.createBuilder()
                                                            .text(Text.translatable("options.lceui.screens.chatWidth.tooltip"))
                                                            .image(new Identifier(LCEUIMod.MOD_ID, "config/chatwidth.png"),864, 496)
                                                            .build()
                                            )
                                            .binding(true, () -> configOptions.chatWidth, newVal -> configOptions.chatWidth = newVal)
                                            .controller(TickBoxControllerBuilder::create)
                                            .build())
                                    .option(Option.<Boolean>createBuilder()
                                            .name(Text.translatable("options.lceui.screens.chatYPos"))
                                            .description(
                                                    value -> OptionDescription.createBuilder()
                                                            .text(Text.translatable("options.lceui.screens.chatYPos.tooltip"))
                                                            .image(new Identifier(LCEUIMod.MOD_ID, "config/chatypos.png"),864, 496)
                                                            .build()
                                            )
                                            .binding(true, () -> configOptions.chatYPos, newVal -> configOptions.chatYPos = newVal)
                                            .controller(TickBoxControllerBuilder::create)
                                            .build())
                                    .option(Option.<Boolean>createBuilder()
                                            .name(Text.translatable("options.lceui.screens.recolorChat"))
                                            .description(
                                                    value -> OptionDescription.createBuilder()
                                                            .text(Text.translatable("options.lceui.screens.recolorChat.tooltip"))
                                                            .image(new Identifier(LCEUIMod.MOD_ID, "config/recolorchat.png"),864, 496)
                                                            .build()
                                            )
                                            .binding(true, () -> configOptions.recolorChat, newVal -> configOptions.recolorChat = newVal)
                                            .controller(TickBoxControllerBuilder::create)
                                            .build())
                                    .option(Option.<Boolean>createBuilder()
                                            .name(Text.translatable("options.lceui.screens.rescaleChatText"))
                                            .description(
                                                    value -> OptionDescription.createBuilder()
                                                            .text(Text.translatable("options.lceui.screens.rescaleChatText.tooltip"))
                                                            .image(new Identifier(LCEUIMod.MOD_ID, "config/rescalechattext.png"),864, 496)
                                                            .build()
                                            )
                                            .binding(false, () -> configOptions.rescaleChatText, newVal -> configOptions.rescaleChatText = newVal)
                                            .controller(TickBoxControllerBuilder::create)
                                            .build())
                                    .build())
                            .group(OptionGroup.createBuilder()
                                    .name(Text.translatable("options.lceui.screens.ui"))
                                    .option(Option.<Boolean>createBuilder()
                                            .name(Text.translatable("options.lceui.screens.removeTransparentBG"))
                                            .description(
                                                    value -> OptionDescription.createBuilder()
                                                            .text(Text.translatable("options.lceui.screens.removeTransparentBG.tooltip"))
                                                            .image(new Identifier(LCEUIMod.MOD_ID, "config/removedarkbg.png"),864, 496)
                                                            .build()
                                            )
                                            .binding(true, () -> configOptions.removeTransparentBG, newVal -> configOptions.removeTransparentBG = newVal)
                                            .controller(TickBoxControllerBuilder::create)
                                            .build())
                                    .option(Option.<Boolean>createBuilder()
                                            .name(Text.translatable("options.lceui.screens.hideHudWhenInUI"))
                                            .description(
                                                    value -> OptionDescription.createBuilder()
                                                            .text(Text.translatable("options.lceui.screens.hideHudWhenInUI.tooltip"))
                                                            .image(new Identifier(LCEUIMod.MOD_ID, "config/hidehudinui.png"),864, 496)
                                                            .build()
                                            )
                                            .binding(true, () -> configOptions.hideHudWhenInUI, newVal -> configOptions.hideHudWhenInUI = newVal)
                                            .controller(TickBoxControllerBuilder::create)
                                            .build())
                                    .build())
                            .build())
                    .category(ConfigCategory.createBuilder()
                            .name(Text.translatable("options.lceui.panorama"))
                                    .option(Option.<Boolean>createBuilder()
                                            .name(Text.translatable("options.lceui.panorama.legacyPanorama"))
                                            .description(
                                                    value -> OptionDescription.createBuilder()
                                                            .text(Text.translatable("options.lceui.panorama.legacyPanorama.tooltip"))
                                                            .image(new Identifier(LCEUIMod.MOD_ID, "config/lcepan.png"),864, 496)
                                                            .build()
                                            )
                                            .binding(true, () -> configOptions.lcePan, newVal -> configOptions.lcePan = newVal)
                                            .controller(TickBoxControllerBuilder::create)
                                            .build())
                                    .option(Option.<Boolean>createBuilder()
                                            .name(Text.translatable("options.lceui.panorama.renderPanoramaEverywhere"))
                                            .description(
                                                    value -> OptionDescription.createBuilder()
                                                            .text(Text.translatable("options.lceui.panorama.renderPanoramaEverywhere.tooltip"))
                                                            .image(new Identifier(LCEUIMod.MOD_ID, "config/renderpaneverywhere.png"),864, 496)
                                                            .build()
                                            )
                                            .binding(false, () -> configOptions.renderPanoramaEverywhere, newVal -> configOptions.renderPanoramaEverywhere = newVal)
                                            .controller(TickBoxControllerBuilder::create)
                                            .build())
                            .group(OptionGroup.createBuilder()
                                    .name(Text.translatable("options.lceui.panorama.compat"))
                                    .option(Option.<Boolean>createBuilder()
                                            .name(Text.translatable("options.lceui.panorama.l4jpansupport"))
                                            .description(
                                                    value -> OptionDescription.createBuilder()
                                                            .text(Text.translatable("options.lceui.panorama.l4jpansupport.tooltip")).build()
                                            )
                                            .binding(true, () -> configOptions.l4jPanSupport, newVal -> configOptions.l4jPanSupport = newVal)
                                            .controller(TickBoxControllerBuilder::create)
                                            .build())
                                    .build())
                            .build())
                    .build()
                    .generateScreen(screen);
        };
    }
}
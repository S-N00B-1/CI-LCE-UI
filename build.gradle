plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://www.jitpack.io' }
	maven { url 'https://maven.fabricmc.net' }
	maven { url "https://maven.kyrptonaught.dev" }
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url 'https://aperlambda.github.io/maven' }
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	mavenLocal()
	maven {
		name 'Gegy'
		url 'https://maven.gegy.dev'
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	ivy {
		url = "https://github.com/yurisuika"
		patternLayout {
			artifact "[organisation]/releases/download/[revision]/[module]-[revision].jar"
			m2compatible = true
		}
		metadataSources { artifact() }
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation ('net.kyrptonaught:kyrptconfig:1.5.8-1.20')
	include ('net.kyrptonaught:kyrptconfig:1.5.8-1.20')

	modImplementation "com.github.LlamaLad7.MixinExtras:mixinextras-fabric:${project.mixinextras_version}"

	modImplementation "maven.modrinth:midnightcontrols:Ek4mkpRw"
	modImplementation "maven.modrinth:midnightlib:YXz8kIQl"

	modImplementation "dev.lambdaurora:spruceui:${project.spruceui_version}"
	api('org.aperlambda:lambdajcommon:1.8.1') {
		exclude group: 'com.google.code.gson'
		exclude group: 'com.google.guava'
	}

	modImplementation 'org.aperlambda:lambdajcommon:1.8.1'

	
}

loom {
	accessWidenerPath = file("src/main/resources/lceui.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}